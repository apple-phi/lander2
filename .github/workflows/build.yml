name: Build and Test

on: [push, pull_request]

jobs:
  build-test-windows:
    runs-on: windows-latest
    strategy:
        fail-fast: false
        matrix:
          include:
            - { sys: mingw64, env: x86_64 }
            - { sys: mingw32, env: i686 }
            - { sys: ucrt64,  env: ucrt-x86_64 }
            - { sys: clang64, env: clang-x86_64 }
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          update: true
          install: >-
            mingw-w64-${{matrix.env}}-toolchain
            mingw-w64-${{matrix.env}}-cmake
            mingw-w64-${{matrix.env}}-mesa
            mingw-w64-${{matrix.env}}-glbinding
            mingw-w64-${{matrix.env}}-glfw
          
      - name: Configure and Build for ${{matrix.env}}
        run: |
          cmake -B build/ -DCMAKE_BUILD_TYPE=Debug
          cmake --build build/ --config Debug --target all --

  build-test-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          brew update
          brew install cmake mesa glbinding glfw

      - name: Configure and Build for MacOS
        run: |
          cmake -B build/ -DCMAKE_BUILD_TYPE=Debug
          cmake --build build/ --config Debug --target all --

  build-test-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ cmake mesa-common-dev libglfw3 libglfw3-dev libglbinding-dev libglbinding-dbg

      - name: Configure and Build for Ubuntu
        run: |
          cmake -B build/ -DCMAKE_BUILD_TYPE=Debug
          cmake --build build/ --config Debug --target all --
